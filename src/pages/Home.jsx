import React, { useState, useEffect } from 'react';
import { Loader, Card, FormField } from "../components";
const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />)
  }
  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  )
}

function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setsearchText] = useState('');
  const [searchResults, setSearchResults] = useState(null);
  const [searchTimeout, setTimeout] = useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);

      try {
        const response = await fetch('http://localhost:8080/api/v1/post', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      }
      catch (error) {
        alert(error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, [])

  const handleSearchhange = (e) => {
    clearTimeout(searchTimeout)
    setsearchText(e.target.value);

    setTimeout(
      setTimeout(() => {
        const searchResults = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))

        setSearchResults(searchResults)
      }, 500)
    );
  }

  return (
    <section>
      <div className='flex flex-col justify-center items-center'>
        <div className='text-center'>
          <h1 className="font-extrabold text-[#9d9da5] text-[32px]">The Community Showcase</h1>
          <p className="mt-2 text-[#f3f4f6] text-[26px]">Browse through a collection of imagination and visually stunning images generated by DALL-E-AI</p>
        </div>
        <div className='flex items-center w-full max-w-[600px]'>
          <div className='mt-16 w-full items-center relative'>
            <FormField
              type="text"
              name="text"
              placeholder="Search for an image..."
              value={searchText}
              handleChange={handleSearchhange}
            />
          </div>
        </div>
      </div>
      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl- mb-3">
                showing results for <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchResults}
                  title="No search results found"
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title="No posts found"
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home